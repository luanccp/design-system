var i=Object.defineProperty;var n=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.8512bef3.js";import{c as e,A as c,M as d}from"./Props.c486a7bc.js";import"./jsx-runtime.370a3845.js";import"./iframe.9695e640.js";import"./runtime.4fb997ed.js";import{T as l}from"./TokensGrid.cde4a4ce.js";import{b as u}from"./index.e530c434.js";import"./string.10e2ce29.js";import"./index.3108e6b0.js";import"./es.map.constructor.b9c23fa2.js";import"./es.number.to-fixed.f3db3ecf.js";function m(){return m=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(o[s]=a[s])}return o},m.apply(this,arguments)}n(m,"_extends");const y={},f="wrapper";function p({components:o,...t}){return e(f,m({},y,t,{components:o,mdxType:"MDXLayout"}),e(d,{title:"Tokens/Font Families",mdxType:"Meta"}),e("h1",null,"Font Families"),e(l,{tokens:u,mdxType:"TokensGrid"}))}n(p,"MDXContent");p.isMDXComponent=!0;const x=n(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const r={title:"Tokens/Font Families",includeStories:["__page"]},T={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>e(c,{mdxStoryNameToKey:T,mdxComponentAnnotations:r},e(p,null))};const k=["__page"];export{k as __namedExportsOrder,x as __page,r as default};
//# sourceMappingURL=fonts.stories.ff89bd32.js.map
